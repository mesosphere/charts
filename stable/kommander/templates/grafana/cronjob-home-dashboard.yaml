{{- if .Values.grafana.enabled }}
# This cronjob periodically sets the Grafana home dashboard to the dashboard identified by
# `.Values.grafana.homeDashboard.name`. A post-install hook job that runs once may end up in a race with the Grafana
# sidecar that loads dashboards from configmaps. This should be replaced with setting the home dashboard in
# `grafana.ini` once the feature is available. See https://github.com/grafana/grafana/pull/25595.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-{{ .Values.grafana.homeDashboard.cronJob.name }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "kommander.labels" . | indent 4 }}
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          name: {{ .Values.grafana.homeDashboard.cronJob.name }}
        spec:
          restartPolicy: OnFailure
          containers:
            - name: {{ .Values.grafana.homeDashboard.cronJob.name }}
              image: {{ .Values.grafana.homeDashboard.cronJob.image | quote }}
              env:
                - name: X_FORWARDED_USER
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.grafana.hooks.secretKeyRef }}
                      key: username
              command:
              - sh
              - "-c"
              - |
                /bin/bash <<'EOF' 
                set -o nounset
                set -o errexit
                set -o pipefail
                GRAFANA_API_URL="http://{{ .Release.Name }}-grafana.{{ .Release.Namespace }}:{{ .Values.grafana.service.port }}"
                CURL="curl --verbose --fail --max-time 30 --retry 20 --retry-connrefused"
                DASHBOARD_ID=$($CURL -H "X-Forwarded-User: $X_FORWARDED_USER" $GRAFANA_API_URL/api/search/?query={{ .Values.grafana.homeDashboard.name | urlquery }} | jq '.[0].id' || true)
                if [ "$DASHBOARD_ID" == "" ]; then
                  echo "error: Could not retrieve dashboard id"
                  exit 1
                fi
                echo "setting home dashboard to ID" $DASHBOARD_ID
                SET_DEFAULT=$($CURL -X PUT -H "Content-Type: application/json" -H "X-Forwarded-User: $X_FORWARDED_USER" -d '{"homeDashboardId":'"$DASHBOARD_ID"'}' $GRAFANA_API_URL/api/org/preferences || true )
                if [ "$SET_DEFAULT" == "" ]; then
                  echo "error: Could not set default dashboard for user $X_FORWARDED_USER"
                  exit 1
                fi
                EOF
{{- end }}
