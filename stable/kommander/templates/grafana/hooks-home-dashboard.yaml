{{- if .Values.grafana.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-{{ .Values.grafana.hooks.jobName }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "kommander.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Values.grafana.hooks.jobName }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: {{ .Values.grafana.hooks.jobName }}
          image: {{ .Values.grafana.hooks.image | quote }}
          env:
            - name: X_FORWARDED_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.grafana.hooks.secretKeyRef }}
                  key: username
          command: 
          - sh
          - "-c"
          - |
            /bin/bash <<'EOF' 
            set -o nounset
            set -o errexit
            set -o pipefail
            GRAFANA_API_URL="http://{{ .Release.Name }}-grafana.{{ .Release.Namespace }}:{{ .Values.grafana.service.port }}"
            CURL="curl --verbose --fail --max-time 30 --retry 20 --retry-connrefused"
            DASHBOARD_ID=$($CURL -H "X-Forwarded-User: $X_FORWARDED_USER" $GRAFANA_API_URL/api/search/?query={{ .Values.grafana.hooks.dashboardName | urlquery }} | jq '.[0].id' || true)
            if [ "$DASHBOARD_ID" == "" ]; then
                  echo "error: Could not retrieve dashboard id"
                  exit 0
            fi
            echo "setting home dashboard to ID" $DASHBOARD_ID
            SET_DEFAULT=$($CURL -X PUT -H "Content-Type: application/json" -H "X-Forwarded-User: $X_FORWARDED_USER" -d '{"homeDashboardId":'"$DASHBOARD_ID"'}' $GRAFANA_API_URL/api/org/preferences || true )
            if [ "SET_DEFAULT" == "" ]; then
            echo "error: Could not set default dashboard for user $X_FORWARDED_USER"
            exit 0
            fi
            EOF
{{- end }}
