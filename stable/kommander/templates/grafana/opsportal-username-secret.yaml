{{- if .Values.grafana.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: copy-{{ .Release.Name }}-{{ .Values.grafana.hooks.secretKeyRef }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "kommander.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: copy-{{ .Release.Name }}-{{ .Values.grafana.hooks.secretKeyRef }}
    spec:
      serviceAccountName: {{ template "kommander.fullname" . }}
      containers:
        - name: kubectl
          # --export flag is deprecated so we need to stick with this kubectl version
          image: bitnami/kubectl:1.16.2
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - kubectl create secret generic {{ .Values.grafana.hooks.secretKeyRef }} -n {{ .Release.Namespace }} -oyaml --dry-run --from-literal=username=$(kubectl get secret ops-portal-credentials --namespace=kubeaddons --export -o jsonpath="{.data.username}" | base64 --decode) | kubectl apply -f -
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-{{ .Release.Name }}-{{ .Values.grafana.hooks.secretKeyRef }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "kommander.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: cleanup-{{ .Release.Name }}-{{ .Values.grafana.hooks.secretKeyRef }}
    spec:
      serviceAccountName: {{ template "kommander.fullname" . }}
      containers:
        - name: kubectl
          image: bitnami/kubectl:1.16.2
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - kubectl delete secret {{ .Values.grafana.hooks.secretKeyRef }} --namespace={{ .Release.Namespace }}
      restartPolicy: OnFailure
{{- end }}
