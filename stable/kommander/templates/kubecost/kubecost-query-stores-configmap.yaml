{{ $ns := .Release.Namespace }}
{{ $labels := include "kommander.labels" . | indent 4  }}
{{ $sa := include "kommander.fullname" . }}
{{- if index .Values "kubecost" "cost-analyzer" "thanos" "query" "enabled" }}
{{- range index .Values "kubecost" "cost-analyzer" "thanos" "query" "serviceDiscoveryFileConfigMaps" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-{{ . }}-configmap
  namespace: {{ $ns }}
  labels:
{{ $labels }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "4"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: create-{{ . }}-configmap
    spec:
      serviceAccountName: {{ $sa }}
      restartPolicy: OnFailure
      containers:
        - name: kubectl
          image: bitnami/kubectl:1.16.2
          command:
          - sh
          - "-c"
          - |
            /bin/bash <<'EOF'
            set -o nounset
            set -o errexit
            set -o pipefail

            echo "checking if {{ . }} configmap exists"

            RES=$(set -o errexit; kubectl get configmap --ignore-not-found {{ . }})
            if [[ $RES == "" ]]; then
              echo "{{ . }} configmap does not exist - creating"
              printf '%s\n' "apiVersion: v1" "kind: ConfigMap" "metadata:" "  name: {{ . }}" "data:" "  stores.yaml: |-" "    - targets: []" > /tmp/{{ . }}.yaml
              kubectl apply -f /tmp/{{ . }}.yaml
              exit 0
            fi

            echo "{{ . }} configmap already exists - no need to create"
            EOF
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ . }}-configmap-cleanup
  namespace: {{ $ns }}
  labels:
{{ $labels }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ . }}-configmap-cleanup
    spec:
      serviceAccountName: {{ $sa }}
      containers:
        - name: kubectl
          image: bitnami/kubectl:1.16.2
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - kubectl delete configmap {{ . }}
      restartPolicy: OnFailure
{{- end }}
{{- end }}
