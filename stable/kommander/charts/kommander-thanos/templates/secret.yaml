{{ $thanosCa := genCA "Kommander Thanos CA" 3650 }}
{{ $thanosServer := genSignedCert "server.thanos.localhost.localdomain" nil (list "server.thanos.localhost.localdomain") 3650 $thanosCa }}
{{ $thanosClient := genSignedCert "client.thanos.localhost.localdomain" nil (list "client.thanos.localhost.localdomain") 3650 $thanosCa }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: kommander-thanos-client-tls
  labels:
{{ include "kommander-thanos.labels" . | indent 4 }}
data:
  tls.crt: {{ b64enc $thanosClient.Cert }}
  tls.key: {{ b64enc $thanosClient.Key }}
  ca.crt: {{ b64enc $thanosCa.Cert }}

# The thanosServer certificate is stored as a federated and local secret. This
# allows to use same certificate on directly connected clusters and clusters
# connected via kubetunnel.
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedSecret
metadata:
  name: {{ template "kommander-thanos.fullname" . }}-server-tls
  namespace: {{ .Values.federate.systemNamespace.name }}
  labels:
{{ include "kommander-thanos.labels" . | indent 4 }}
spec:
  placement:
    clusterSelector:
      matchLabels: {}
  template:
    type: Opaque
    data:
      tls.crt: {{ b64enc $thanosServer.Cert }}
      tls.key: {{ b64enc $thanosServer.Key }}
      ca.crt: {{ b64enc $thanosCa.Cert }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: kommander-thanos-server-tls
  labels:
{{ include "kommander-thanos.labels" . | indent 4 }}
data:
  tls.crt: {{ b64enc $thanosServer.Cert }}
  tls.key: {{ b64enc $thanosServer.Key }}
  ca.crt: {{ b64enc $thanosCa.Cert }}
