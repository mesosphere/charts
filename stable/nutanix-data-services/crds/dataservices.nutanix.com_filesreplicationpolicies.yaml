---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: filesreplicationpolicies.dataservices.nutanix.com
spec:
  group: dataservices.nutanix.com
  names:
    kind: FilesReplicationPolicy
    listKind: FilesReplicationPolicyList
    plural: filesreplicationpolicies
    shortNames:
    - frp
    - frps
    singular: filesreplicationpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Files Replication Policy Ready Condition
      jsonPath: .status.conditions[?(@.type=='ReplicationPolicyReady')].status
      name: ReplicationPolicyReady
      type: string
    - description: Name of the Files Replication Policy in Nutanix Files Manager.
      jsonPath: .status.replicationPolicyDetails.policyName
      name: ReplicationPolicyName
      type: string
    - description: 'Retention policy of the underlying PC replication policy (default:
        Retain).'
      jsonPath: .spec.retentionPolicy
      name: RetentionPolicy
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          FilesReplicationPolicy is a namespaced resource.
          FilesReplicationPolicy is the Schema for the filesreplicationpolicies API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FilesReplicationPolicySpec defines the desired state of FilesReplicationPolicy.
            properties:
              primaryLocation:
                description: primaryLocation is the primary location of the Replication
                  Policy.
                properties:
                  filesVolumes:
                    description: filesVolumes is the list of volumes that are protected
                      as a part of the Replication Policy.
                    items:
                      type: string
                    type: array
                  primaryFileServerFQDN:
                    description: primaryFileServerFQDN is the FQDN of the primary
                      file server in the Replication Policy.
                    type: string
                type: object
              recoveryLocation:
                description: recoveryLocation is the recovery location of the Replication
                  Policy.
                properties:
                  recoveryFileServerFQDN:
                    description: recoveryFileServerFQDN is the FQDN of the recovery
                      file server in the Replication Policy.
                    type: string
                  recoveryFilesServerPCUUID:
                    description: |-
                      recoveryManagementServerUUID is the UUID used to identify the remote PC
                      where the recovery file server exists.
                      If empty, the recovery file server is assumed to be in the same PC as the primary file server.
                    type: string
                type: object
              replicationSchedule:
                description: replicationSchedule is the schedule for replication of
                  the Replication Policy.
                properties:
                  replicationFrequency:
                    description: replicationFrequency is the frequency of replication
                      of the Replication Policy.
                    type: string
                  replicationFrequencyUnit:
                    description: replicationFrequencyUnit is the unit of the frequency
                      of replication of the Replication Policy.
                    enum:
                    - SECOND
                    - MINUTE
                    - HOUR
                    - DAY
                    - WEEK
                    - MONTH
                    - YEAR
                    type: string
                  startTime:
                    description: |-
                      startTime is the time at which the replication of the Replication Policy starts.
                      If not specified, the replication starts immediately.
                    type: string
                type: object
              retentionPolicy:
                description: |-
                  RetentionPolicy specifies what action is to be taken while deleting the resource.
                  - "Retain" (default): Retain the replication policy in PC.
                  - "Delete": Delete the replication policy in PC and the resource.
                enum:
                - Retain
                - Delete
                type: string
            type: object
          status:
            description: FilesReplicationPolicyStatus defines the observed state of
              FilesReplicationPolicy.
            properties:
              conditions:
                description: |-
                  conditions represent the latest available observations of the
                  FilesReplicationPolicy.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastUpdateTime:
                description: last time the status was updated after fetching policy
                  information from PC.
                format: date-time
                type: string
              replicationPolicyDetails:
                description: |-
                  ReplicationPolicyDetails represents information about the
                  Files Replication Policy created by the controller
                properties:
                  filesVolumes:
                    description: filesVolumes is the list of volumes that are protected
                      as a part of the Replication Policy.
                    items:
                      type: string
                    type: array
                  policyHandle:
                    description: PolicyHandle is a unique identifier for the replication
                      policy.
                    type: string
                  policyId:
                    description: policyId is the extId of the Files ReplicationPolicy
                    type: string
                  policyName:
                    description: policyName is the name of the Files Replication Policy
                      created on Prism Central
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
