{{- if .Values.defaultStorageClass -}}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-default-storage-class-setup"
  namespace: "{{ .Release.Namespace }}"
data:
  setup.sh: |-
    #!/bin/bash
    set -euo pipefail
    for sc in `kubectl get sc --output=go-template='{{range.items}}{{println .metadata.name}}{{end}}' | egrep -v '^local-path$'`
    do
        kubectl patch storageclass ${sc} -p '{"metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
    done
    kubectl patch storageclass local-path -p '{"metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-{{ randAlphaNum 10 | lower }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "local-path-provisioner.serviceAccountName" . }}
      automountServiceAccountToken: true
      containers:
      - name: post-install-job
        image: "bitnami/kubectl:1.19.7"
        command: ["/bin/bash"]
        args: ["/opt/scripts/setup.sh"]
        volumeMounts:
        - name: "scripts"
          mountPath: "/opt/scripts"
      volumes:
      - name: "scripts"
        configMap:
          name: "{{ .Release.Name }}-default-storage-class-setup"
{{- end -}}
