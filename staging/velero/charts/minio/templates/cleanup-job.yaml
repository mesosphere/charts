apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "minio.fullname" . }}-cleanup
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "minio.fullname" . }}-cleanup
    spec:
      serviceAccountName: {{ template "minio.fullname" . }}-cleanup-sa
      containers:
        - name: kubectl
          image: docker.io/bitnami/kubectl:1.16.2
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              #!/bin/sh
              # The following secret and services are only used in the
              # earlier version of velero-minio which is based on
              # minio operator. Those are no longer needed in the helm
              # chart based implementation. It's always safe to delete
              # them.
              # NOTE: we have to leave the secret `minio-creds-secret`
              # untouched because minio mandates the same credential
              # to recover data from the volumes. See details below:
              # https://github.com/minio/minio/issues/8601
              # https://github.com/minio/minio/tree/master/docs/config
              kubectl delete secret -n {{ .Release.Namespace }} --ignore-not-found minio-leaf 
              kubectl delete secret -n {{ .Release.Namespace }} --ignore-not-found minio-leaf-generic
              kubectl delete secret -n {{ .Release.Namespace }} --ignore-not-found minio-root
              kubectl delete svc -n {{ .Release.Namespace }} --ignore-not-found minio-hl-svc 
              kubectl delete svc -n {{ .Release.Namespace }} --ignore-not-found minio-lb
              # Since the helm chart based implementation will also
              # install a statefulset with name `minio`, we need to
              # make sure the statefulset is gone before helm tries to
              # install the helm chart.
              if kubectl get minioinstances -n {{ .Release.Namespace }} minio; then
                kubectl delete minioinstances -n {{ .Release.Namespace }} minio
                kubectl delete statefulset -n {{ .Release.Namespace }} --ignore-not-found minio
              fi
      restartPolicy: OnFailure
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "minio.fullname" . }}-cleanup-role
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "minio.fullname" . }}-cleanup-rolebinding
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "minio.fullname" . }}-cleanup-role
subjects:
  - kind: ServiceAccount
    name: {{ template "minio.fullname" . }}-cleanup-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "minio.fullname" . }}-cleanup-sa
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
