apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "multus.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "multus.labels" . | nindent 4 }}
    tier: node
    app: multus
spec:
  selector:
    matchLabels:
      {{- include "multus.selectorLabels" . | nindent 6 }}
      tier: node
      app: multus
  {{- if .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "multus.selectorLabels" . | nindent 8 }}
        tier: node
        app: multus
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "multus.serviceAccountName" . }}
      hostNetwork: true
      hostPID: true
      priorityClassName: system-node-critical
      terminationGracePeriodSeconds: 10
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: install-multus-binary
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        command:
          - "sh"
          - "-c"
          - "cp /usr/src/multus-cni/bin/multus-shim /host/opt/cni/bin/multus-shim && cp /usr/src/multus-cni/bin/passthru /host/opt/cni/bin/passthru"
        resources:
          requests:
            cpu: "10m"
            memory: "15Mi"
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          {{- include "multus.initContainerVolumeMounts" . | nindent 10 }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: [ "/usr/src/multus-cni/bin/multus-daemon" ]
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          {{- include "multus.volumeMounts" . | nindent 10 }}
        env:
          - name: MULTUS_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
      volumes:
        {{- include "multus.volumes" . | nindent 8 }}
