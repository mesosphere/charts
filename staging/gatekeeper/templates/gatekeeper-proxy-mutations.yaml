{{- if and (and .Values.mutations.podProxySettings.noProxy .Values.mutations.enablePodProxy) .Values.mutations.enable }}
---
apiVersion: mutations.gatekeeper.sh/v1alpha1
kind: Assign
metadata:
  name: "pod-mutation-no-proxy"
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["*"]
  match:
    scope: "*"
    {{- if .Values.mutations.namespaceSelectorForProxy }}
    namespaceSelector:
      matchLabels:
      {{- toYaml .Values.mutations.namespaceSelectorForProxy | nindent 8 }}
    {{- end }}
    {{- if .Values.mutations.excludeNamespacesFromProxy }}
    excludedNamespaces: {{ .Values.mutations.excludeNamespacesFromProxy }}
    {{- end }}
  location: "spec.containers[name:*].env[name:NO_PROXY]"
  parameters:
    assign:
      value:
        name: NO_PROXY
        value: {{ .Values.mutations.podProxySettings.noProxy }}
{{- end }}
{{- if and (and .Values.mutations.podProxySettings.httpProxy .Values.mutations.enablePodProxy) .Values.mutations.enable }}
---
apiVersion: mutations.gatekeeper.sh/v1alpha1
kind: Assign
metadata:
  name: "pod-mutation-http-proxy"
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["*"]
  match:
    scope: "*"
    {{- if .Values.mutations.namespaceSelectorForProxy }}
    namespaceSelector:
      matchLabels:
      {{- toYaml .Values.mutations.namespaceSelectorForProxy | nindent 8 }}
    {{- end }}
    {{- if .Values.mutations.excludeNamespacesFromProxy }}
    excludedNamespaces: {{ .Values.mutations.excludeNamespacesFromProxy }}
    {{- end }}
  location: "spec.containers[name:*].env[name:HTTP_PROXY]"
  parameters:
    assign:
      value:
        name: HTTP_PROXY
        value: {{ .Values.mutations.podProxySettings.httpProxy }}
{{- end }}
{{- if and (and .Values.mutations.podProxySettings.httpsProxy .Values.mutations.enablePodProxy) .Values.mutations.enable }}
---
apiVersion: mutations.gatekeeper.sh/v1alpha1
kind: Assign
metadata:
  name: "pod-mutation-https-proxy"
spec:
  applyTo:
    - groups: [""]
      kinds: ["Pod"]
      versions: ["*"]
  match:
    scope: "*"
    {{- if .Values.mutations.namespaceSelectorForProxy }}
    namespaceSelector:
      matchLabels:
      {{- toYaml .Values.mutations.namespaceSelectorForProxy | nindent 8 }}
    {{- end }}
    {{- if .Values.mutations.excludeNamespacesFromProxy }}
    excludedNamespaces: {{ .Values.mutations.excludeNamespacesFromProxy }}
    {{- end }}
  location: "spec.containers[name:*].env[name:HTTPS_PROXY]"
  parameters:
    assign:
      value:
        name: HTTPS_PROXY
        value: {{ .Values.mutations.podProxySettings.httpsProxy }}
{{- end }}
